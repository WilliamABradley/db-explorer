// AutolinkedNativeModules.g.cs contents generated by "react-native autolink-windows"

using System.Collections.Generic;

// Namespaces from @react-native-community/checkbox
using CheckboxWindows;

// Namespaces from @react-native-community/datetimepicker
using DateTimePicker;

// Namespaces from @react-native-community/slider
using SliderWindows;

// Namespaces from react-native-document-picker
using ReactNativeDocumentPicker;

// Namespaces from react-native-fs
using RNFS;

// Namespaces from react-native-sensitive-info
using RNSensitiveInfoCPP;

// Namespaces from react-native-webview
using ReactNativeWebView;

// Namespaces from @react-native-async-storage/async-storage
using ReactNativeAsyncStorage;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
            // IReactPackageProviders from @react-native-community/checkbox
            packageProviders.Add(new CheckboxWindows.ReactPackageProvider());
            // IReactPackageProviders from @react-native-community/datetimepicker
            packageProviders.Add(new DateTimePicker.ReactPackageProvider());
            // IReactPackageProviders from @react-native-community/slider
            packageProviders.Add(new SliderWindows.ReactPackageProvider());
            // IReactPackageProviders from react-native-document-picker
            packageProviders.Add(new ReactNativeDocumentPicker.ReactPackageProvider());
            // IReactPackageProviders from react-native-fs
            packageProviders.Add(new RNFS.ReactPackageProvider());
            // IReactPackageProviders from react-native-sensitive-info
            packageProviders.Add(new RNSensitiveInfoCPP.ReactPackageProvider());
            // IReactPackageProviders from react-native-webview
            packageProviders.Add(new ReactNativeWebView.ReactPackageProvider());
            // IReactPackageProviders from @react-native-async-storage/async-storage
            packageProviders.Add(new ReactNativeAsyncStorage.ReactPackageProvider());
        }
    }
}
